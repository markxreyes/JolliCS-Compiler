%header%
GRAMMARTYPE = "LL"

%tokens%
/* Reserved Words */
BURGER		="burger"
CHICKEN		= "chicken"
CHOCO     	= "pielit"
CREAM        	= "cream"
CREAMICE       	= "creamice"
DINEIN 		= "dinein"
EGG 		= "egg"

EXTRA		= "extra"
FRENCH  	= "french"
FRIES        	= "fries"
GETNUM   	= "getnum"
GRAVY 		= "gravy"
GOTO 		= "goto"
ICE      	= "ice"
JOY     	= "joy"

MALLOW        	= "pielit"
MAMSIR 		= "mamsir"
TEA      	= "tea"
VOID    	= "void"
POPO      	= "popo"
RICE 		= "rice"
TRAY        	= "tray"
TAKEOUT		= "takeout"
THANKS 		= "thanks"
ID		= "identifier"


/* Data Types */
PIE		= "pie"
NUM     	= "num"
SPAG		= "spag"

/* Literals */
NUMLIT 		= "numlit"
SPAGLIT 	= "spaglit"
PIELIT 		= "pielit"

/* Reserved Symbols */
COMMA 	= ","
OBR      = "{"
CBR        = "}"
OP          = "("
CP          = ")"
OB          = "["
CB         = "]"
COL        	= ":"
NEG	   	= "~"
EQ         = "="
ADD        = "+"
SUB	  = "-"
MUL       = "*"
DIV        = "/"
MOD        = "%"
INC        = "++"
DEC        = "--"
LESS       = "<"
GREAT      = ">"
LEQ      = "<="
GEQ     = ">="
ISEQ     = "=="
NOTEQ        = "!="
NOT        = "!"
AND        = "&&"
OR	= "||"
TERM	= "$"
EXT = "//"
COM1		= "'"
COM2		= "'"
PER = "."

WHITESPACE  = <<[ \t\n\r]+>> %ignore%

%productions%
P_JOLLICS_START = MAMSIR TERM [P_GLOBAL] TRAY OP CP OBR [BODY] CBR [P_FUNCTION] THANKS TERM;
P_GLOBAL =  P_GLOBAL_C [P_GLOBAL];
P_GLOBAL_C = P_VARDEC | P_CONSTDEC | P_FUNCDEC | P_STRUCT;

P_VARDEC = P_DTYPE P_IDENTI [P_VARDECTAIL] TERM;
P_DTYPE = NUM | SPAG | PIE ;
P_IDENTI = ID [P_IDCHOICE] ;
P_IDCHOICE = P_ARRAY | P_IDSTRUCT;
P_IDSTRUCT = PER ID [P_IDSTRUCT];
P_ARRAY = OB P_CTR OB [P_ARRAY2];
P_ARRAY2 = OB P_CTR CB ;
P_CTR = NUM | P_CALC;
P_VARDECTAIL = COMMA P_IDENTI[P_VARDECTAIL] | P_ARRAYTAIL | EQ P_VALUE |P_IDENTI;
P_ARRAYTAIL = EQ P_ARRAYTAIL2 ;
P_ARRAYTAIL2 = OBR P_VALUE [P_VALUETAIL] CBR [P_ARRAYTAIL3];
P_ARRAYTAIL3 = P_ARRAYTAIL2 ;
P_VALUE = SPAGLIT | PIELIT | P_NUM;
P_NUM = NUMLIT | GETNUM OP P_GETN CP;
P_GETN = NUMLIT | P_IDENTI;
P_VALUETAIL = COMMA P_VALUE;
P_VAL = NUMLIT | ID;

P_CONSTDEC = TEA P_DTYPE P_IDENTI [P_CONSTDECTAIL] EQ P_CONSTVAL TERM;
P_CONSTDECTAIL = COMMA P_IDENTI [P_CONSTDECTAIL];
P_CONSTVAL = P_ARRAYTAIL | P_VALUE;

P_STRUCT = BURGER ID OBR P_VARDEC CBR TERM;
P_FUNCDEC = P_FTYPE ID OP [P_PARAM] CP TERM;
P_FTYPE = VOID |P_NUM;
P_PARAM = P_DTYPE ID [P_PARAMTAIL];
P_PARAMTAIL = COMMA P_PARAM;

BODY = ID BODYCHOICE [BODY] | GOTO COL | P_VARDEC [BODY] | P_DINEIN [BODY] | P_TAKEOUT [BODY] | P_POPO [BODY] | P_CHICKENJOY [BODY] | P_ICECREAM [BODY] | P_FRENCHFRIES [BODY];

BODYCHOICE = COL | [P_ARRAY] P_MATHCHOICE | P_CALLFUNC ;

P_MATHCHOICE = P_MATH | P_OP1 TERM;

P_CALLFUNC = OP [P_PASS] [P_PASS1] CP TERM;
P_PASS = ID;
P_PASS1 = COMMA ID [P_PASS1];

P_MATH = EQ P_CALC TERM;
P_CALC = P_VAL [P_MATHOP] | OP P_VAL [P_MATHOP] CP;
P_MATHOP = P_OP [P_CALC1];
P_CALC1 = P_CALC;
P_OP = ADD | SUB | MUL | DIV | MOD;

P_INCDEC = P_IDENTI P_OP1;
P_OP1 = INC | DEC;

P_LOGICAL = AND|OR|NOT;
P_LOGICON = OP P_COND CP P_LOGICAL OP P_COND CP [P_LOGICONTAIL];
P_LOGICONTAIL = P_LOGICAL OP P_COND CP ;
P_COND = P_COMP P_CEX P_COMP;
P_COMP = NUMLIT [P_MATHOP] | GETNUM OP P_GETN CP | OP P_VAL [P_MATHOP] CP | ID [P_IDCHOICE1];
P_IDCHOICE1 = P_MATHOP | P_ARRAY;
P_CEX = ISEQ | NOTEQ | GREAT | LESS | GEQ| LEQ;

P_DINEIN = DINEIN EXT P_IDENTI [P_IN] TERM;
P_IN = EXT P_IDENTI [P_IN];

P_TAKEOUT = TAKEOUT EXT P_OUT [P_OUTTAIL] TERM;
P_OUT = P_IDENTI | SPAGLIT;
P_OUTTAIL = EXT P_OUT [P_OUTTAIL];

P_POPO = POPO OP P_INITIAL TERM P_COND TERM P_INCDEC TERM CP OBR BODY CBR;
P_INITIAL = NUM ID EQ NUMLIT | ID;

P_FRENCHFRIES = FRIES OP P_COND CP OBR BODY CBR | FRENCH OBR BODY CBR FRIES OP P_COND CP ;

P_CHOICE = SPAGLIT | NUMLIT;

P_CHICKENJOY = CHICKEN ID OBR P_JOY [P_YUM] CBR;
P_JOY = JOY P_CHOICE OBR BODY  GRAVY TERM CBR [P_JOY1];
P_JOY1 = P_JOY;

P_YUM = OBR BODY  GRAVY TERM CBR;

P_ICECREAM = P_ICE [P_CREAMICE] [P_CREAM];
P_ICE = ICE OP P_CONDITION CP OBR BODY CBR;
P_CONDITION = NUMLIT [P_MATHOP] P_CEX P_COMP | GETNUM OP P_GETN CP P_CEX P_COMP | ID [P_IDCHOICE1] P_CEX P_COMP | OP P_OPCHOICE;
P_OPCHOICE = GETNUM OP P_GETN CP P_CONDTAIL | OP P_VAL [P_MATHOP] CP P_CONDTAIL | NUMLIT [P_MATHOP] P_NUMLITCHOICE | ID P_IDCHOICE2;
P_VALTAIL = CP P_CEX P_COMP;
P_CONDTAIL = CP P_LOGICAL OP P_COND CP [P_LOGICONTAIL];
P_NUMLITCHOICE = CP P_NUMLITTAIL;
P_NUMLITTAIL = P_CEX P_COMP | P_LOGICAL OP P_COND CP [P_LOGICONTAIL];
P_IDCHOICE2 = ID P_IDCHOICE3;
P_IDCHOICE3 = P_NUMLITCHOICE | P_MATHOP P_NUMLITCHOICE | P_ARRAY P_CONDTAIL;
P_CREAMICE = CREAMICE OP P_COND CP OBR BODY CBR;

P_CREAM = CREAM OBR BODY CBR;

P_FUNCTION = ID OP P_PARAM CP OBR BODY P_RETURN CBR;
P_RETURN = EXTRA P_RET TERM;
P_RET = P_CTR | PIELIT;